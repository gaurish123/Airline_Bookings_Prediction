setwd("C:\\Users\\Gaurish\\Desktop\\Sabre")
Dataset<-read.csv("DataSet.csv",header = TRUE, stringsAsFactors = FALSE, na.strings = c(""))
for (i1 in c("871","870","869","868","698","697")){
  for (j1 in c("Business Cabin","Economy Cabin")){
    Dataset[(Dataset$FlightID==i1) & 
              (Dataset$Cabin==j1)&(Dataset$CabinBookings==0),
            "CabinBookings"]<-median(Dataset[(Dataset$FlightID==i1) &
                                               (Dataset$Cabin==j1),
                                             "CabinBookings"])
  }
  
}
Dataset$forcasted_percent<-NA
Dataset$percentbookings<-(Dataset$CabinBookings/Dataset$CabinCapacity)*100
Dataset$ID<-c(1:dim(Dataset)[1])
full<-Dataset[(Dataset$FlightID=="697")& (Dataset$Cabin=="Economy Cabin"),c("percentbookings","DepartureDate")]

full$DepartureDate<-as.POSIXct(full$DepartureDate,format="%d/%m/%Y")
data$DepartureDate<-as.POSIXct(data$DepartureDate,format="%d/%m/%Y")


full<-Dataset[(Dataset$FlightID=="697")& (Dataset$Cabin=="Economy Cabin"),c("percentbookings","DepartureDate")]

full$DepartureDate<-as.POSIXct(full$DepartureDate,format="%d/%m/%Y")
full_t<-xts(full[,1],full[,2])
par(mfrow=c(2,4))
full_t_sma1<-SMA(full_t,3)
plot(full_t_sma1)

full_t_sma2<-SMA(full_t,5)
plot(full_t_sma2)

full_t_sma3<-SMA(full_t,7)
plot(full_t_sma3)


#exponential smoothing
full_t_ema1<-EMA(full_t,3,ratio=0.25)
plot(full_t_ema1)

full_t_ema2<-EMA(full_t,3,ratio=0.75)
plot(full_t_ema2)

full_t_ema3<-EMA(full_t,5,ratio=0.25)
plot(full_t_ema3)


#taking diff and log to see if it smoothes
full_diff<-diff(full_t)
plot(full_diff) #looks diff is the best fitting here

full_log_diff1<-diff(log(full_t))
plot(full_log_diff1)

adf.test(diff(log(data$percentbookings)), alternative="stationary", k=0)
par(mfrow)
acf(diff(log(data$percentbookings)))
pacf(diff(log(data$percentbookings)))








# using time series to create final model
setwd("C:\\Users\\Gaurish\\Desktop\\Sabre")
Dataset<-read.csv("DataSet.csv",header = TRUE, stringsAsFactors = FALSE, na.strings = c(""))
for (i1 in c("871","870","869","868","698","697")){
  for (j1 in c("Business Cabin","Economy Cabin")){
    Dataset[(Dataset$FlightID==i1) & 
              (Dataset$Cabin==j1)&(Dataset$CabinBookings==0),
            "CabinBookings"]<-median(Dataset[(Dataset$FlightID==i1) &
                                               (Dataset$Cabin==j1),
                                             "CabinBookings"])
  }
  
}
library("tidyr")
library("ggplot2")
library("dplyr")
library("corrplot")
library("xts")
library("TTR")
library("tseries")
library("forecast")
library("rugarch")

Dataset$forcasted_percent<-NA
Dataset$percentbookings<-(Dataset$CabinBookings/Dataset$CabinCapacity)*100
Dataset$ID<-c(1:dim(Dataset)[1])

for (i1 in c("871","870","869","868","698","697")){
  for (j1 in c("Business Cabin","Economy Cabin")){
    data<-Dataset[Dataset$FlightID==i1 & Dataset$Cabin==j1 & 
                    !(substr(Dataset$DepartureDate,7,10)=='2015' & 
                        as.integer(substr(Dataset$DepartureDate,4,5))>=5),c("percentbookings","DepartureDate")]
    
    data_pred1<-Dataset[Dataset$FlightID==i1 & Dataset$Cabin==j1 & 
                          (substr(Dataset$DepartureDate,7,10)=='2015' & 
                             as.integer(substr(Dataset$DepartureDate,4,5))>=5),c("percentbookings","DepartureDate","ID")]
    data$DepartureDate<-as.POSIXct(data$DepartureDate,format="%d/%m/%Y")

    data_ts1<-ts(diff(log(data$percentbookings)),frequency = 7)
    
    
    
    plot(stl(data_ts1, s.window = 7))
    x1<-data.frame(stlf(data_ts1, method = "ets",h=62))
    x1_arima<-forecast(auto.arima(data_ts1, stepwise = T, approximation = F, trace = T),h=62)
    x1_arima_t<-data.frame(x1_arima)
    x2<-cumsum(diff(c(diff(log(data$percentbookings))[length(diff(log(data$percentbookings)))],x1$Point.Forecast)))
    x2<-exp(x2)
    data_pred1$forcasted_diff<-x2*100
    
    
    x2_arima<-cumsum(diff(c(diff(log(data$percentbookings))[length(diff(log(data$percentbookings)))],x1_arima_t$Point.Forecast)))
    x2_arima<-exp(x2_arima)
    data_pred1$forcasted_diff_arima<-x2_arima*100
    
    
    data_t1<-xts(data[,1],data[,2])
    colnames(data_t1)<-"Percentage_Bookings"
    diff.rate<-diff(log(data_t1$Percentage_Bookings))
    diff.rate<-diff.rate[!is.na(diff.rate)]
    
    data2<-ugarchspec(variance.model = list(model="sGARCH",garchOrder=c(1,1)),mean.model = list(armaOrder=c(2,2)),
                      distribution.model = "std")
    dataGarch2<-ugarchfit(spec = data2,data=diff.rate)
    dataPredict<-ugarchboot(dataGarch2,n.ahead = 62,method = c("Partial","Full")[1])
   
    data_final<-gather(as.data.frame(lapply(data.frame(dataPredict@fseries), function(x) mean(x))))
    
    diff.rate<-data.frame(diff.rate)
    data_final$value <- cumsum(diff(c(diff.rate$Percentage_Bookings[dim(diff.rate)[1]],data_final$value)))
    data_pred1$forcasted_diff_garch<-exp(data_final$value)*100
    
    
    par(mfrow=c(3,1))
    plot(stlf(data_ts1, method = "ets",h=62))
    plot(x1_arima)
    plot(dataPredict,which=2)
    
    MSE_garch<-mean((data_pred1$percentbookings-data_pred1$forcasted_diff_garch)^2)
    MSE_ets<-mean((data_pred1$percentbookings-data_pred1$forcasted_diff)^2)
    MSE_arima<-mean((data_pred1$percentbookings-data_pred1$forcasted_diff_arima)^2)
    
    print("printing error values")
    print(MSE_garch)
    print(MSE_ets)
    print(MSE_arima)
    
    min_value<-min(MSE_garch,MSE_ets,MSE_arima)
    if(min_value==MSE_garch){
      x="forcasted_diff_garch"
    }
    if(min_value==MSE_ets){
      x="forcasted_diff"
    }
    if(min_value==MSE_arima){
      x="forcasted_diff_arima"
    }
    print(x)
    for (i in Dataset$ID){
      for (j in data_pred1$ID){
        if (i==j){
          
          Dataset$forcasted_percent[i]<-data_pred1[data_pred1$ID==i,x]
          
        }
      }
    }
    
    #for (i in Dataset$ID){
     # for (j in data_pred1$ID){
      #  if (i==j){
          
       #   Dataset$forcasted_percent[i]<-data_pred1[data_pred1$ID==i,"forcasted_diff"]
          
        #}
      #}
    #}
    
    
    
    
  }
  
}
Dataset$Forecasted.Bookings<-as.integer(Dataset$CabinCapacity*Dataset$forcasted_percent/100)
result<-Dataset[,c("FlightID","DepartureDate","Cabin","Forecasted.Bookings","CabinBookings")]


#mean((data_pred1$percentbookings-data_pred1$forcasted_diff)^2)
t_busi<-Dataset[(!is.na(Dataset$Forecasted.Bookings)) & (Dataset$Cabin=="Business Cabin"),c("Forecasted.Bookings","CabinBookings")]
mse_busi<-sqrt(mean((t_busi$CabinBookings-t_busi$Forecasted.Bookings)^2))

t_eco<-Dataset[(!is.na(Dataset$Forecasted.Bookings)) & (Dataset$Cabin=="Economy Cabin"),c("Forecasted.Bookings","CabinBookings")]
mse_eco<-sqrt(mean((t_eco$CabinBookings-t_eco$Forecasted.Bookings)^2))

over_all<-Dataset[!is.na(Dataset$Forecasted.Bookings),c("Forecasted.Bookings","CabinBookings")]
over_all_mean<-sqrt(mean((over_all$CabinBookings-over_all$Forecasted.Bookings)^2))

write.csv(result,file="results_1AM.csv",row.names=FALSE)
